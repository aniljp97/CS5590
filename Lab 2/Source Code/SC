#include "Seeed_BMP280.h"
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <math.h>
#include <SoftwareSerial.h>
#include <Adafruit_ESP8266.h>
#include <stdio.h>
#include <stdlib.h>
#include <DHT.h>
#include <DHT_U.h>
#include <WiFiClient.h> 
#include <SPI.h>
//#include <ESP8266WiFi.h>
//#include <ESP8266mDNS.h>
//#include <ESP8266AVRISP.h>
#include <HttpClient.h>

#define ESP_SSID "You're My Favorite Pizza Place"
#define ESP_PASS "BiggPapaJonathan"
#define HOST "wifitest.adafruit.com"
#define PAGE "/testwifi/index.html"
#define PORT 80
#define ARD_RX_ESP_TX 4
#define ARD_TX_ESP_RX 5
#define DHTPIN 10
#define DHTTYPE DHT22
#define IO_USERNAME  "Daudimania"
#define IO_KEY       "aio_OYYc91VyXd1YhjpW8k4byDZLJ3DQ"

BMP280 bmp280;
LiquidCrystal_I2C lcd = LiquidCrystal_I2C(0x27, 16, 2);
SoftwareSerial UNO(1, 0);
SoftwareSerial hc06(2, 3); //input, output
SoftwareSerial softser(ARD_RX_ESP_TX, ARD_TX_ESP_RX);
int led = 6;
char val;
DHT dht(10, DHT22);
const char *ssid = "You're My Favorite Pizza Place";  //ENTER YOUR WIFI SETTINGS <<<<<<<<<
const char *password = "BiggPapaJonathan";
const char *host = "api.thingspeak.com";
String apiKey = "PU4YPO9TWZDRZ924";
float pressure;
int num;
//HttpClient client;

void setup(){
  
  
  pinMode(6, OUTPUT);

  Serial.begin(9600);
  Serial.println("Enter AT Commands: ");
  UNO.begin(4800);
  hc06.begin(9600);
  if(!bmp280.init()){
    Serial.println("Device error!");
  }
  pinMode(led, OUTPUT);

  //lcd.begin();
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Starting...");
  delay(1000);

  //setup wifi
  delay(1000);
  Serial.begin(115200);
 /*
  WiFi.mode(WIFI_STA);        //This line hides the viewing of ESP as wifi hotspot
  //WiFi.mode(WIFI_AP_STA);   //Both hotspot and client are enabled
  //WiFi.mode(WIFI_AP);       //Only Access point
  
  WiFi.begin(ssid, password);     //Connect to your WiFi router
  Serial.println("");
 
  Serial.print("Connecting");
  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
 
  //If connection successful show IP address in serial monitor
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());  //IP address assigned to your ESP
  */
}



void loop(){
  
  if(hc06.available() > 0){
    val = hc06.read();
    Serial.println(val);
  }

  if(val == '0'){
    TempCheck();
  }
  else if(val == '1'){
    PressureCheck();
  }
  else if(val == '2'){
    AltitudeCheck();
  }
  else if(val == '3'){
    HumidityCheck();
  }

  TempPressureCheck();

}

void BlueToothCheck(){
  if (hc06.available()){
    Serial.write(hc06.read());
  }
  
  //Write from Serial Monitor to HC06
  if (Serial.available()){
    hc06.write(Serial.read());
  }  
}

void BlinkLED(){
  digitalWrite(6, HIGH);
  delay(100);
  digitalWrite(6, LOW);
  delay(100);
}


void TempCheck(){
  num = bmp280.getTemperature();
  hc06.write(num);
}

void PressureCheck(){
  num = pressure = bmp280.getPressure();
  hc06.write(num);
}

void AltitudeCheck(){
  num = bmp280.calcAltitude(pressure);
  hc06.write(num);
}

void HumidityCheck(){
  num = dht.readHumidity();
  hc06.write(num);
}

void TempPressureCheck(){
  lcd.setCursor(0, 0);
  float humidity;
  //get and print temperatures
  lcd.print(bmp280.getTemperature());
  lcd.print("C ");
  //hc06.write(itoa(bmp280.getTemperature(), val, 10));
  //hc06.write("C ");
  //get and print atmospheric pressure data
  lcd.print(pressure = bmp280.getPressure());
  lcd.println("Pa");
  lcd.setCursor(0, 1);
  //hc06.write(itoa(pressure, val, 10));
  //hc06.write("Pa ");
  //get and print altitude data
  lcd.print(bmp280.calcAltitude(pressure));
  lcd.print("m");
  //hc06.write(itoa(bmp280.calcAltitude(pressure), val, 10));
  //hc06.write("m ");
  //get humidity
  //Serial.print(humidity = dht.readHumidity());
  //hc06.write(itoa(humidity, val, 10));
  //hc06.write("% ");
  //hc06.write("# ");
  //String request = "https://api.thingspeak.com/update?api_key=PU4YPO9TWZDRZ924&field1=0" + itoa(bmp.getTemperature(), val, 10) + "&field2=" + itoa(bmp280.getPressure(), val, 10) + "&field3=" + itoa(bmp280.calcAltitude(pressure), val, 10) + "&field4=" + itoa(dht.readHumidity(), val, 10);
  //client.get(request);
  delay(300);
  lcd.clear();
  lcd.setCursor(0, 0);
}
